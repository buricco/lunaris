.\" $OpenBSD: units.1,v 1.26 2014/09/08 01:27:55 schwarze Exp $
.\" converted to new format by deraadt@openbsd.org
.\"
.\" Copyright (c) 1993 by Adrian Mariano (adrian@cam.cornell.edu)
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
.\" Disclaimer:  This software is provided by the author "as is".  The author
.\" shall not be liable for any damages caused in any way by this software.
.\"
.\" I would appreciate (though I do not require) receiving a copy of any
.\" improvements you might make to this program.
.\"
.Dd $Mdocdate: September 8 2014 $
.Dt UNITS 1
.Os
.Sh NAME
.Nm units
.Nd conversion program
.Sh SYNOPSIS
.Nm units
.Op Fl qv
.Op Fl f Ar filename
.Op Oo Ar count Oc Ar from-unit to-unit
.Sh DESCRIPTION
The
.Nm
program converts quantities expressed in various scales to
their equivalents in other scales.
The
.Nm
program can only handle multiplicative scale changes.
It cannot convert Celsius
to Fahrenheit, for example.
It also does not handle logarithmic units such as bels.
.Pp
.Nm
works interactively by prompting the user for input:
.Bd -literal -offset indent
You have: meters
You want: feet
        * 3.2808399
        / 0.3048

You have: cm^3
You want: gallons
        * 0.00026417205
        / 3785.4118
.Ed
.Pp
That is, one meter equals roughly 3.28 feet
(or, conversely, one foot is roughly equal to 0.3 meters),
and one gallon is roughly equal to 3785 cubic cm.
.Pp
The
.Nm
program can handle numbers as well:
.Bd -literal -offset indent
You have: 60 miles/hr
You want: km/hr
        * 96.56064
        / 0.010356187

You have: 100 USD
You want: 10 euro
        * 7.4354971
        / 0.13449
.Ed
.Pp
In other words, 60 miles per hour is about 96.6 km/hr,
and 100 US dollars will get you seven 10-Euro notes.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl f Ar filename
Specifies the name of the units data file to load.
.It Fl q
Suppresses prompting of the user for units and the display of statistics
about the number of units loaded.
.It Fl v
Prints the version number.
.It Oo Ar count Oc Ar from-unit to-unit
Allows a single unit conversion to be done directly from the command line.
No prompting will occur.
The units program will print out
only the result of this single conversion.
A
.Ar count
can be given to specify multiples of
.Ar from-unit .
.El
.Pp
Powers of units can be specified using the
.Ql ^
character as shown in
the example, or by simple concatenation:
.Sq cm3
is equivalent to
.Sq cm^3 .
Multiplication of units can be specified by using spaces, a dash or
an asterisk.
Division of units is indicated by the slash
.Pq Ql / .
Note that multiplication has a higher precedence than division, so
.Sq m/s/s
is the same as
.Sq m/s^2
or
.Sq m/s s .
If the user enters incompatible unit types, the units program will
print a message indicating that the units are not conformable and
it will display the reduced form for each unit:
.Bd -literal -offset indent
You have: ergs/hour
You want: fathoms kg^2 / day
conformability error
        2.7777778e-11 kg m^2 / sec^3
        2.1166667e-05 kg^2 m / sec
.Ed
.Pp
The conversion information is read from a units data file.
The default file includes definitions for most familiar units,
abbreviations and metric prefixes.
Some constants of nature included are:
.Pp
.Bl -tag -width mercuryXXX -offset indent -compact
.It pi
ratio of circumference to diameter
.It c
speed of light
.It e
charge on an electron
.It g
acceleration of gravity
.It force
same as g
.It mole
Avogadro's number
.It water
pressure per unit height of water (at 4 C)
.It mercury
pressure per unit height of mercury
.It ao
Bohr radius
.It AU
astronomical unit
.El
.Pp
.Sq Pound
is a unit of mass.
Compound names are run together so
.Sq poundforce
is a unit of force.
British units that differ from their US counterparts are prefixed with
.Sq br ,
and currency is prefixed with its country name:
.Sq belgiumfranc ,
.Sq britainpound .
When searching for
a unit, if the specified string does not appear exactly as a unit
name, then the units program will try to remove a trailing
.Sq s
or a trailing
.Sq es
and check again for a match.
.Pp
All of these definitions can be read in the standard units file, or you
can supply your own file.
A unit is specified on a single line by
giving its name and an equivalence.
One should be careful to define
new units in terms of old ones so that a reduction leads to the
primitive units which are marked with
.Ql \&!
characters.
The units program will not detect infinite loops that could be caused
by careless unit definitions.
.Pp
Prefixes are defined in the same way as standard units, but with
a trailing dash at the end of the prefix name.
Prefixes are applied
after the longest matching unit name is found; for example,
.Dq nmile
is taken to be a nautical mile rather than a nanomile.
.Sh FILES
.Bl -tag -width /usr/share/misc/units.lib
.It Pa /usr/share/misc/units.lib
the standard units library
.El
.Sh SEE ALSO
.Rs
.%I International Bureau of Weights and Measures
.%T The International System of Units
.%U http://www.bipm.org/utils/common/pdf/si_brochure_8.pdf
.Re
.Rs
.%R ISO 4217
.%T Codes for the representation of currencies and funds
.%D 2008
.Re
.Rs
.%R ISO/IEC 80000
.%T Quantities and units \(em Part 13: Information science and technology
.Re
.Sh AUTHORS
.An Adrian Mariano Aq Mt adrian@cam.cornell.edu
or
.Aq Mt mariano@geom.umn.edu
.Sh BUGS
The effect of including a
.Ql /
in a prefix is surprising.
.Pp
Exponents of units entered by the user can be only one digit.
You can work around this by multiplying several terms.
.Pp
The user must use
.Ql |
to indicate division of numbers and
.Ql /
to indicate division of symbols.
This distinction should not be necessary.
.Pp
Prefixes specified without a unit are treated as dimensionless quantities.
This can lead to confusion when some prefixes are also defined as units
(e.g., m).
For example, Tera- / Giga- is 1000, but one Tesla (T) is 10,000
Gauss (G).
.Pp
Some non-SI units have multiple definitions (e.g., barrel, calorie) and
others have changed over time (e.g., cubit).
In particular, monetary values fluctuate.
.Pp
The program contains various arbitrary limits on the length
of the units converted and on the length of the data file.
.Pp
The program should use a hash table to store units so that
it doesn't take so long to load the units list and check
for duplication.
