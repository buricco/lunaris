.fp 5 CW
.de Af
.ds ;G \\*(;G\\f\\$1\\$3\\f\\$2
.if !\\$4 .Af \\$2 \\$1 "\\$4" "\\$5" "\\$6" "\\$7" "\\$8" "\\$9"
..
.de aF
.ie \\$3 .ft \\$1
.el \{\
.ds ;G \&
.nr ;G \\n(.f
.Af "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6" "\\$7" "\\$8" "\\$9"
\\*(;G
.ft \\n(;G \}
..
.de L
.aF 5 \\n(.f "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6" "\\$7"
..
.de LR
.aF 5 1 "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6" "\\$7"
..
.de RL
.aF 1 5 "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6" "\\$7"
..
.de EX		\" start example
.ta 1i 2i 3i 4i 5i 6i
.PP
.RS 
.PD 0
.ft 5
.nf
..
.de EE		\" end example
.fi
.ft
.PD
.RE
.PP
..
.TH FS3D 3
.SH NAME
fs3d \- 3D (nDFS) on/off switch
.SH SYNOPSIS
.EX
#include <fs3d.h>

int          fs3d(int \fIop\fP);
.EE
.SH DESCRIPTION
.L fs3d
controls and queries the
.B 3D
file system
.RB (aka nDFS )
enable state.
.L 0
is returned if the current process cannot mount
.B 3D
files.
.I op
may be one of:
.TP
.B FS3D_TEST
Returns
.L "FS3D_ON [1]"
if
.B 3D
is enabled,
.L "FS3D_OFF [0]"
otherwise.
.TP
.B FS3D_ON
Enables
.B 3D
and returns the previous
.L 3D
state (either
.B FS3D_ON
or
.BR FS3D_OFF ).
.TP
\fBFS3D_LIMIT(\fIlimit\fB)\fR
Sets the viewpath level limit to
.IR limit .
The previous limit is returned.
.TP
.B FS3D_INIT
Re-initialize the
.B 3D
tables.
Used for debugging.
.SH "SEE ALSO"
3D(1)
