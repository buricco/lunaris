.fp 5 CW
.de Af
.ds ;G \\*(;G\\f\\$1\\$3\\f\\$2
.if !\\$4 .Af \\$2 \\$1 "\\$4" "\\$5" "\\$6" "\\$7" "\\$8" "\\$9"
..
.de aF
.ie \\$3 .ft \\$1
.el \{\
.ds ;G \&
.nr ;G \\n(.f
.Af "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6" "\\$7" "\\$8" "\\$9"
\\*(;G
.ft \\n(;G \}
..
.de L
.aF 5 \\n(.f "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6" "\\$7"
..
.de LR
.aF 5 1 "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6" "\\$7"
..
.de RL
.aF 1 5 "\\$1" "\\$2" "\\$3" "\\$4" "\\$5" "\\$6" "\\$7"
..
.de EX		\" start example
.ta 1i 2i 3i 4i 5i 6i
.PP
.RS 
.PD 0
.ft 5
.nf
..
.de EE		\" end example
.fi
.ft
.PD
.RE
.PP
..
.TH INT 3
.SH NAME
int \- integral type macros
.SH SYNOPSIS
.EX
#include <int.h>
.EE
.SH DESCRIPTION
This header defines macros for the local integral types.
.LR int_1 ,
.LR int_2
and
.L int_4
are always defined to integral types with a size of
1, 2 and 4 bytes respectively.
The macros
.LI int_ n
where
.I n
is a power of 2 greater than 4 are defined if the type is supported.
.L int_max
is defined to be the largest support integral type.
.L int_swap
is the
.IR swap (3)
operation that converts a local
.L int
to canonical big-endian representation.
.SH "SEE ALSO"
swap(3)
